/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #E5E7EB;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9CA3AF;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9CA3AF;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

.tooltip-arrow,.tooltip-arrow:before {
  position: absolute;
  width: 8px;
  height: 8px;
  background: inherit;
}

.tooltip-arrow {
  visibility: hidden;
}

.tooltip-arrow:before {
  content: "";
  visibility: visible;
  transform: rotate(45deg);
}

[data-tooltip-style^='light'] + .tooltip > .tooltip-arrow:before {
  border-style: solid;
  border-color: #e5e7eb;
}

[data-tooltip-style^='light'] + .tooltip[data-popper-placement^='top'] > .tooltip-arrow:before {
  border-bottom-width: 1px;
  border-right-width: 1px;
}

[data-tooltip-style^='light'] + .tooltip[data-popper-placement^='right'] > .tooltip-arrow:before {
  border-bottom-width: 1px;
  border-left-width: 1px;
}

[data-tooltip-style^='light'] + .tooltip[data-popper-placement^='bottom'] > .tooltip-arrow:before {
  border-top-width: 1px;
  border-left-width: 1px;
}

[data-tooltip-style^='light'] + .tooltip[data-popper-placement^='left'] > .tooltip-arrow:before {
  border-top-width: 1px;
  border-right-width: 1px;
}

.tooltip[data-popper-placement^='top'] > .tooltip-arrow {
  bottom: -4px;
}

.tooltip[data-popper-placement^='bottom'] > .tooltip-arrow {
  top: -4px;
}

.tooltip[data-popper-placement^='left'] > .tooltip-arrow {
  right: -4px;
}

.tooltip[data-popper-placement^='right'] > .tooltip-arrow {
  left: -4px;
}

.tooltip.invisible > .tooltip-arrow:before {
  visibility: hidden;
}

[data-popper-arrow],[data-popper-arrow]:before {
  position: absolute;
  width: 8px;
  height: 8px;
  background: inherit;
}

[data-popper-arrow] {
  visibility: hidden;
}

[data-popper-arrow]:before {
  content: "";
  visibility: visible;
  transform: rotate(45deg);
}

[data-popper-arrow]:after {
  content: "";
  visibility: visible;
  transform: rotate(45deg);
  position: absolute;
  width: 9px;
  height: 9px;
  background: inherit;
}

[role="tooltip"] > [data-popper-arrow]:before {
  border-style: solid;
  border-color: #e5e7eb;
}

.dark [role="tooltip"] > [data-popper-arrow]:before {
  border-style: solid;
  border-color: #4b5563;
}

[role="tooltip"] > [data-popper-arrow]:after {
  border-style: solid;
  border-color: #e5e7eb;
}

.dark [role="tooltip"] > [data-popper-arrow]:after {
  border-style: solid;
  border-color: #4b5563;
}

[data-popover][role="tooltip"][data-popper-placement^='top'] > [data-popper-arrow]:before {
  border-bottom-width: 1px;
  border-right-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='top'] > [data-popper-arrow]:after {
  border-bottom-width: 1px;
  border-right-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='right'] > [data-popper-arrow]:before {
  border-bottom-width: 1px;
  border-left-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='right'] > [data-popper-arrow]:after {
  border-bottom-width: 1px;
  border-left-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='bottom'] > [data-popper-arrow]:before {
  border-top-width: 1px;
  border-left-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='bottom'] > [data-popper-arrow]:after {
  border-top-width: 1px;
  border-left-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='left'] > [data-popper-arrow]:before {
  border-top-width: 1px;
  border-right-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='left'] > [data-popper-arrow]:after {
  border-top-width: 1px;
  border-right-width: 1px;
}

[data-popover][role="tooltip"][data-popper-placement^='top'] > [data-popper-arrow] {
  bottom: -5px;
}

[data-popover][role="tooltip"][data-popper-placement^='bottom'] > [data-popper-arrow] {
  top: -5px;
}

[data-popover][role="tooltip"][data-popper-placement^='left'] > [data-popper-arrow] {
  right: -5px;
}

[data-popover][role="tooltip"][data-popper-placement^='right'] > [data-popper-arrow] {
  left: -5px;
}

[role="tooltip"].invisible > [data-popper-arrow]:before {
  visibility: hidden;
}

[role="tooltip"].invisible > [data-popper-arrow]:after {
  visibility: hidden;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6B7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #1C64F2;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #1C64F2;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6B7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6B7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

select:not([size]) {
  background-image: url("data:image/svg+xml,%3csvg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 10 6'%3e %3cpath stroke='%236B7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 1 4 4 4-4'/%3e %3c/svg%3e");
  background-position: right 0.75rem center;
  background-repeat: no-repeat;
  background-size: 0.75em 0.75em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

:is([dir=rtl]) select:not([size]) {
  background-position: left 0.75rem center;
  padding-right: 0.75rem;
  padding-left: 0;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #1C64F2;
  background-color: #fff;
  border-color: #6B7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #1C64F2;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked,.dark [type='checkbox']:checked,.dark [type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 0.55em 0.55em;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 12'%3e %3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M1 5.917 5.724 10.5 15 1.5'/%3e %3c/svg%3e");
  background-repeat: no-repeat;
  background-size: 0.55em 0.55em;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  background-size: 1em 1em;
}

.dark [type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
  background-size: 1em 1em;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg aria-hidden='true' xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 12'%3e %3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M0.5 6h14'/%3e %3c/svg%3e");
  background-color: currentColor;
  border-color: transparent;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 0.55em 0.55em;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px auto inherit;
}

input[type=file]::file-selector-button {
  color: white;
  background: #1F2937;
  border: 0;
  font-weight: 500;
  font-size: 0.875rem;
  cursor: pointer;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  padding-left: 2rem;
  padding-right: 1rem;
  margin-inline-start: -1rem;
  margin-inline-end: 1rem;
}

input[type=file]::file-selector-button:hover {
  background: #374151;
}

:is([dir=rtl]) input[type=file]::file-selector-button {
  padding-right: 2rem;
  padding-left: 1rem;
}

.dark input[type=file]::file-selector-button {
  color: white;
  background: #4B5563;
}

.dark input[type=file]::file-selector-button:hover {
  background: #6B7280;
}

input[type="range"]::-webkit-slider-thumb {
  height: 1.25rem;
  width: 1.25rem;
  background: #1C64F2;
  border-radius: 9999px;
  border: 0;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  cursor: pointer;
}

input[type="range"]:disabled::-webkit-slider-thumb {
  background: #9CA3AF;
}

.dark input[type="range"]:disabled::-webkit-slider-thumb {
  background: #6B7280;
}

input[type="range"]:focus::-webkit-slider-thumb {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1px;
  --tw-ring-color: rgb(164 202 254 / var(--tw-ring-opacity));
}

input[type="range"]::-moz-range-thumb {
  height: 1.25rem;
  width: 1.25rem;
  background: #1C64F2;
  border-radius: 9999px;
  border: 0;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  cursor: pointer;
}

input[type="range"]:disabled::-moz-range-thumb {
  background: #9CA3AF;
}

.dark input[type="range"]:disabled::-moz-range-thumb {
  background: #6B7280;
}

input[type="range"]::-moz-range-progress {
  background: #3F83F8;
}

input[type="range"]::-ms-fill-lower {
  background: #3F83F8;
}

.toggle-bg:after {
  content: "";
  position: absolute;
  top: 0.125rem;
  left: 0.125rem;
  background: white;
  border-color: #D1D5DB;
  border-width: 1px;
  border-radius: 9999px;
  height: 1.25rem;
  width: 1.25rem;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;
  transition-duration: .15s;
  box-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

input:checked + .toggle-bg:after {
  transform: translateX(100%);;
  border-color: white;
}

input:checked + .toggle-bg {
  background: #1C64F2;
  border-color: #1C64F2;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(63 131 248 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(63 131 248 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: start;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}

.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

html :is(.pointer-events-none) {
  pointer-events: none;
}

html :is(.pointer-events-auto) {
  pointer-events: auto;
}

html :is(.visible) {
  visibility: visible;
}

html :is(.invisible) {
  visibility: hidden;
}

html :is(.collapse) {
  visibility: collapse;
}

html :is(.static) {
  position: static;
}

html :is(.fixed) {
  position: fixed;
}

html :is(.absolute) {
  position: absolute;
}

html :is(.relative) {
  position: relative;
}

html :is(.sticky) {
  position: sticky;
}

html :is(.inset-0) {
  inset: 0px;
}

html :is(.inset-y-0) {
  top: 0px;
  bottom: 0px;
}

html :is(.-top-96) {
  top: -24rem;
}

html :is(.bottom-0) {
  bottom: 0px;
}

html :is(.bottom-\[60px\]) {
  bottom: 60px;
}

html :is(.bottom-full) {
  bottom: 100%;
}

html :is(.end-0) {
  inset-inline-end: 0px;
}

html :is(.left-0) {
  left: 0px;
}

html :is(.right-0) {
  right: 0px;
}

html :is(.start-0) {
  inset-inline-start: 0px;
}

html :is(.start-1\/2) {
  inset-inline-start: 50%;
}

html :is(.top-0) {
  top: 0px;
}

html :is(.top-full) {
  top: 100%;
}

html :is(.-z-\[1\]) {
  z-index: -1;
}

html :is(.z-10) {
  z-index: 10;
}

html :is(.z-20) {
  z-index: 20;
}

html :is(.z-30) {
  z-index: 30;
}

html :is(.z-40) {
  z-index: 40;
}

html :is(.z-50) {
  z-index: 50;
}

html :is(.z-\[1\]) {
  z-index: 1;
}

html :is(.col-span-full) {
  grid-column: 1 / -1;
}

html :is(.m-0) {
  margin: 0px;
}

html :is(.m-0\.5) {
  margin: 0.125rem;
}

html :is(.mx-3) {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

html :is(.mx-4) {
  margin-left: 1rem;
  margin-right: 1rem;
}

html :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

html :is(.my-2) {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

html :is(.-mb-4) {
  margin-bottom: -1rem;
}

html :is(.-ms-4) {
  margin-inline-start: -1rem;
}

html :is(.mb-1) {
  margin-bottom: 0.25rem;
}

html :is(.mb-10) {
  margin-bottom: 2.5rem;
}

html :is(.mb-2) {
  margin-bottom: 0.5rem;
}

html :is(.mb-4) {
  margin-bottom: 1rem;
}

html :is(.mb-8) {
  margin-bottom: 2rem;
}

html :is(.me-4) {
  margin-inline-end: 1rem;
}

html :is(.ms-2) {
  margin-inline-start: 0.5rem;
}

html :is(.ms-3) {
  margin-inline-start: 0.75rem;
}

html :is(.ms-4) {
  margin-inline-start: 1rem;
}

html :is(.ms-6) {
  margin-inline-start: 1.5rem;
}

html :is(.ms-auto) {
  margin-inline-start: auto;
}

html :is(.mt-0) {
  margin-top: 0px;
}

html :is(.mt-0\.5) {
  margin-top: 0.125rem;
}

html :is(.mt-1) {
  margin-top: 0.25rem;
}

html :is(.mt-1\.5) {
  margin-top: 0.375rem;
}

html :is(.mt-10) {
  margin-top: 2.5rem;
}

html :is(.mt-2) {
  margin-top: 0.5rem;
}

html :is(.mt-3) {
  margin-top: 0.75rem;
}

html :is(.mt-4) {
  margin-top: 1rem;
}

html :is(.mt-5) {
  margin-top: 1.25rem;
}

html :is(.mt-6) {
  margin-top: 1.5rem;
}

html :is(.mt-7) {
  margin-top: 1.75rem;
}

html :is(.mt-8) {
  margin-top: 2rem;
}

html :is(.mt-auto) {
  margin-top: auto;
}

html :is(.block) {
  display: block;
}

html :is(.inline-block) {
  display: inline-block;
}

html :is(.inline) {
  display: inline;
}

html :is(.flex) {
  display: flex;
}

html :is(.inline-flex) {
  display: inline-flex;
}

html :is(.table) {
  display: table;
}

html :is(.grid) {
  display: grid;
}

html :is(.hidden) {
  display: none;
}

html :is(.size-10) {
  width: 2.5rem;
  height: 2.5rem;
}

html :is(.size-12) {
  width: 3rem;
  height: 3rem;
}

html :is(.size-16) {
  width: 4rem;
  height: 4rem;
}

html :is(.size-2) {
  width: 0.5rem;
  height: 0.5rem;
}

html :is(.size-2\.5) {
  width: 0.625rem;
  height: 0.625rem;
}

html :is(.size-20) {
  width: 5rem;
  height: 5rem;
}

html :is(.size-28) {
  width: 7rem;
  height: 7rem;
}

html :is(.size-3) {
  width: 0.75rem;
  height: 0.75rem;
}

html :is(.size-3\.5) {
  width: 0.875rem;
  height: 0.875rem;
}

html :is(.size-4) {
  width: 1rem;
  height: 1rem;
}

html :is(.size-5) {
  width: 1.25rem;
  height: 1.25rem;
}

html :is(.size-6) {
  width: 1.5rem;
  height: 1.5rem;
}

html :is(.size-8) {
  width: 2rem;
  height: 2rem;
}

html :is(.size-9) {
  width: 2.25rem;
  height: 2.25rem;
}

html :is(.size-full) {
  width: 100%;
  height: 100%;
}

html :is(.h-3) {
  height: 0.75rem;
}

html :is(.h-4) {
  height: 1rem;
}

html :is(.h-5\/6) {
  height: 83.333333%;
}

html :is(.h-52) {
  height: 13rem;
}

html :is(.h-6) {
  height: 1.5rem;
}

html :is(.h-60) {
  height: 15rem;
}

html :is(.h-72) {
  height: 18rem;
}

html :is(.h-9) {
  height: 2.25rem;
}

html :is(.h-\[300px\]) {
  height: 300px;
}

html :is(.h-\[44rem\]) {
  height: 44rem;
}

html :is(.h-\[50rem\]) {
  height: 50rem;
}

html :is(.h-auto) {
  height: auto;
}

html :is(.h-full) {
  height: 100%;
}

html :is(.max-h-full) {
  max-height: 100%;
}

html :is(.w-1\/2) {
  width: 50%;
}

html :is(.w-16) {
  width: 4rem;
}

html :is(.w-2\/3) {
  width: 66.666667%;
}

html :is(.w-20) {
  width: 5rem;
}

html :is(.w-24) {
  width: 6rem;
}

html :is(.w-28) {
  width: 7rem;
}

html :is(.w-4) {
  width: 1rem;
}

html :is(.w-56) {
  width: 14rem;
}

html :is(.w-64) {
  width: 16rem;
}

html :is(.w-\[1036px\]) {
  width: 1036px;
}

html :is(.w-\[25rem\]) {
  width: 25rem;
}

html :is(.w-\[90rem\]) {
  width: 90rem;
}

html :is(.w-\[calc\(100\%-2rem\)\]) {
  width: calc(100% - 2rem);
}

html :is(.w-full) {
  width: 100%;
}

html :is(.max-w-2xl) {
  max-width: 42rem;
}

html :is(.max-w-3xl) {
  max-width: 48rem;
}

html :is(.max-w-7xl) {
  max-width: 80rem;
}

html :is(.max-w-\[85rem\]) {
  max-width: 85rem;
}

html :is(.max-w-md) {
  max-width: 28rem;
}

html :is(.flex-1) {
  flex: 1 1 0%;
}

html :is(.flex-none) {
  flex: none;
}

html :is(.flex-shrink) {
  flex-shrink: 1;
}

html :is(.flex-shrink-0) {
  flex-shrink: 0;
}

html :is(.shrink-0) {
  flex-shrink: 0;
}

html :is(.grow) {
  flex-grow: 1;
}

html :is(.basis-full) {
  flex-basis: 100%;
}

html :is(.origin-top-left) {
  transform-origin: top left;
}

html :is(.-translate-x-1\/2) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-x-8) {
  --tw-translate-x: -2rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-x-\[10rem\]) {
  --tw-translate-x: -10rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-x-\[15rem\]) {
  --tw-translate-x: -15rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-x-full) {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-y-8) {
  --tw-translate-y: -2rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-translate-y-full) {
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.translate-x-0) {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.translate-x-20) {
  --tw-translate-x: 5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.translate-x-full) {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.translate-y-full) {
  --tw-translate-y: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.-rotate-12) {
  --tw-rotate: -12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.rotate-180) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.rotate-\[-60deg\]) {
  --tw-rotate: -60deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.transform-none) {
  transform: none;
}

html :is(.cursor-default) {
  cursor: default;
}

html :is(.cursor-not-allowed) {
  cursor: not-allowed;
}

html :is(.cursor-pointer) {
  cursor: pointer;
}

html :is(.resize) {
  resize: both;
}

html :is(.list-outside) {
  list-style-position: outside;
}

html :is(.list-disc) {
  list-style-type: disc;
}

html :is(.grid-cols-1) {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

html :is(.grid-cols-12) {
  grid-template-columns: repeat(12, minmax(0, 1fr));
}

html :is(.grid-cols-2) {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

html :is(.grid-cols-4) {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

html :is(.grid-cols-7) {
  grid-template-columns: repeat(7, minmax(0, 1fr));
}

html :is(.flex-row) {
  flex-direction: row;
}

html :is(.flex-col) {
  flex-direction: column;
}

html :is(.flex-wrap) {
  flex-wrap: wrap;
}

html :is(.place-items-center) {
  place-items: center;
}

html :is(.items-start) {
  align-items: flex-start;
}

html :is(.items-end) {
  align-items: flex-end;
}

html :is(.items-center) {
  align-items: center;
}

html :is(.justify-start) {
  justify-content: flex-start;
}

html :is(.justify-end) {
  justify-content: flex-end;
}

html :is(.justify-center) {
  justify-content: center;
}

html :is(.justify-between) {
  justify-content: space-between;
}

html :is(.gap-1) {
  gap: 0.25rem;
}

html :is(.gap-1\.5) {
  gap: 0.375rem;
}

html :is(.gap-12) {
  gap: 3rem;
}

html :is(.gap-3) {
  gap: 0.75rem;
}

html :is(.gap-4) {
  gap: 1rem;
}

html :is(.gap-6) {
  gap: 1.5rem;
}

html :is(.gap-x-0) {
  -moz-column-gap: 0px;
       column-gap: 0px;
}

html :is(.gap-x-1) {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

html :is(.gap-x-1\.5) {
  -moz-column-gap: 0.375rem;
       column-gap: 0.375rem;
}

html :is(.gap-x-2) {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

html :is(.gap-x-3) {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

html :is(.gap-x-3\.5) {
  -moz-column-gap: 0.875rem;
       column-gap: 0.875rem;
}

html :is(.gap-x-5) {
  -moz-column-gap: 1.25rem;
       column-gap: 1.25rem;
}

html :is(.gap-x-6) {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

html :is(.gap-x-8) {
  -moz-column-gap: 2rem;
       column-gap: 2rem;
}

html :is(.gap-y-4) {
  row-gap: 1rem;
}

html :is(.gap-y-5) {
  row-gap: 1.25rem;
}

html :is(.gap-y-8) {
  row-gap: 2rem;
}

html :is(.-space-x-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

html :is(.space-x-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

html :is(.space-x-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

html :is(.space-x-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

html :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

html :is(.space-y-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

html :is(.space-y-5 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

html :is(.space-y-6 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

html :is(.divide-x > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

html :is(.divide-gray-200 > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity));
}

html :is(.overflow-hidden) {
  overflow: hidden;
}

html :is(.overflow-visible) {
  overflow: visible;
}

html :is(.truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

html :is(.whitespace-nowrap) {
  white-space: nowrap;
}

html :is(.rounded) {
  border-radius: 0.25rem;
}

html :is(.rounded-full) {
  border-radius: 9999px;
}

html :is(.rounded-lg) {
  border-radius: 0.5rem;
}

html :is(.rounded-md) {
  border-radius: 0.375rem;
}

html :is(.rounded-xl) {
  border-radius: 0.75rem;
}

html :is(.rounded-e-lg) {
  border-start-end-radius: 0.5rem;
  border-end-end-radius: 0.5rem;
}

html :is(.rounded-l-lg) {
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}

html :is(.rounded-r-lg) {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

html :is(.rounded-s-lg) {
  border-start-start-radius: 0.5rem;
  border-end-start-radius: 0.5rem;
}

html :is(.rounded-t-xl) {
  border-top-left-radius: 0.75rem;
  border-top-right-radius: 0.75rem;
}

html :is(.rounded-ee-xl) {
  border-end-end-radius: 0.75rem;
}

html :is(.rounded-es-xl) {
  border-end-start-radius: 0.75rem;
}

html :is(.border) {
  border-width: 1px;
}

html :is(.border-0) {
  border-width: 0px;
}

html :is(.border-b) {
  border-bottom-width: 1px;
}

html :is(.border-e) {
  border-inline-end-width: 1px;
}

html :is(.border-t) {
  border-top-width: 1px;
}

html :is(.border-blue-600) {
  --tw-border-opacity: 1;
  border-color: rgb(28 100 242 / var(--tw-border-opacity));
}

html :is(.border-blue-700) {
  --tw-border-opacity: 1;
  border-color: rgb(26 86 219 / var(--tw-border-opacity));
}

html :is(.border-gray-100) {
  --tw-border-opacity: 1;
  border-color: rgb(243 244 246 / var(--tw-border-opacity));
}

html :is(.border-gray-200) {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

html :is(.border-gray-300) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

html :is(.border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

html :is(.border-transparent) {
  border-color: transparent;
}

html :is(.border-b-transparent) {
  border-bottom-color: transparent;
}

html :is(.border-e-white\/\[\.7\]) {
  border-inline-end-color: rgb(255 255 255 / .7);
}

html :is(.bg-amber-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(245 158 11 / var(--tw-bg-opacity));
}

html :is(.bg-blue-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(28 100 242 / var(--tw-bg-opacity));
}

html :is(.bg-blue-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(26 86 219 / var(--tw-bg-opacity));
}

html :is(.bg-gray-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

html :is(.bg-gray-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

html :is(.bg-gray-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

html :is(.bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

html :is(.bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

html :is(.bg-gray-900\/50) {
  background-color: rgb(17 24 39 / 0.5);
}

html :is(.bg-green-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(188 240 218 / var(--tw-bg-opacity));
}

html :is(.bg-purple-200) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 215 254 / var(--tw-bg-opacity));
}

html :is(.bg-rose-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(244 63 94 / var(--tw-bg-opacity));
}

html :is(.bg-transparent) {
  background-color: transparent;
}

html :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

html :is(.bg-white\/50) {
  background-color: rgb(255 255 255 / 0.5);
}

html :is(.bg-opacity-50) {
  --tw-bg-opacity: 0.5;
}

html :is(.bg-gradient-to-l) {
  background-image: linear-gradient(to left, var(--tw-gradient-stops));
}

html :is(.bg-gradient-to-r) {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

html :is(.bg-gradient-to-tl) {
  background-image: linear-gradient(to top left, var(--tw-gradient-stops));
}

html :is(.bg-gradient-to-tr) {
  background-image: linear-gradient(to top right, var(--tw-gradient-stops));
}

html :is(.from-blue-50) {
  --tw-gradient-from: #EBF5FF var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(235 245 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.from-blue-600) {
  --tw-gradient-from: #1C64F2 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(28 100 242 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.from-gray-200) {
  --tw-gradient-from: #E5E7EB var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(229 231 235 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.from-violet-300\/50) {
  --tw-gradient-from: rgb(196 181 253 / 0.5) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(196 181 253 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.via-blue-100) {
  --tw-gradient-to: rgb(225 239 254 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #E1EFFE var(--tw-gradient-via-position), var(--tw-gradient-to);
}

html :is(.via-white\/0) {
  --tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), rgb(255 255 255 / 0) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

html :is(.to-blue-50) {
  --tw-gradient-to: #EBF5FF var(--tw-gradient-to-position);
}

html :is(.to-purple-100) {
  --tw-gradient-to: #EDEBFE var(--tw-gradient-to-position);
}

html :is(.to-violet-500) {
  --tw-gradient-to: #8b5cf6 var(--tw-gradient-to-position);
}

html :is(.to-white\/0) {
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
}

html :is(.bg-clip-text) {
  -webkit-background-clip: text;
          background-clip: text;
}

html :is(.fill-gray-500) {
  fill: #6B7280;
}

html :is(.object-cover) {
  -o-object-fit: cover;
     object-fit: cover;
}

html :is(.p-1) {
  padding: 0.25rem;
}

html :is(.p-2) {
  padding: 0.5rem;
}

html :is(.p-2\.5) {
  padding: 0.625rem;
}

html :is(.p-4) {
  padding: 1rem;
}

html :is(.p-6) {
  padding: 1.5rem;
}

html :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

html :is(.px-2\.5) {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}

html :is(.px-3) {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

html :is(.px-4) {
  padding-left: 1rem;
  padding-right: 1rem;
}

html :is(.px-5) {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

html :is(.py-1) {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

html :is(.py-1\.5) {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

html :is(.py-10) {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

html :is(.py-12) {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

html :is(.py-16) {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

html :is(.py-2) {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

html :is(.py-2\.5) {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}

html :is(.py-3) {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

html :is(.py-5) {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

html :is(.py-8) {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

html :is(.pb-8) {
  padding-bottom: 2rem;
}

html :is(.pe-3) {
  padding-inline-end: 0.75rem;
}

html :is(.ps-2) {
  padding-inline-start: 0.5rem;
}

html :is(.ps-5) {
  padding-inline-start: 1.25rem;
}

html :is(.pt-2) {
  padding-top: 0.5rem;
}

html :is(.text-center) {
  text-align: center;
}

html :is(.text-start) {
  text-align: start;
}

html :is(.font-notosanskr) {
  font-family: "Noto Sans KR";
}

html :is(.text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem;
}

html :is(.text-3xl) {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

html :is(.text-base) {
  font-size: 1rem;
  line-height: 1.5rem;
}

html :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

html :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

html :is(.text-xl) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

html :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem;
}

html :is(.font-bold) {
  font-weight: 700;
}

html :is(.font-medium) {
  font-weight: 500;
}

html :is(.font-semibold) {
  font-weight: 600;
}

html :is(.uppercase) {
  text-transform: uppercase;
}

html :is(.lowercase) {
  text-transform: lowercase;
}

html :is(.italic) {
  font-style: italic;
}

html :is(.leading-6) {
  line-height: 1.5rem;
}

html :is(.leading-9) {
  line-height: 2.25rem;
}

html :is(.leading-normal) {
  line-height: 1.5;
}

html :is(.tracking-normal) {
  letter-spacing: 0em;
}

html :is(.text-amber-500) {
  --tw-text-opacity: 1;
  color: rgb(245 158 11 / var(--tw-text-opacity));
}

html :is(.text-black) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

html :is(.text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(28 100 242 / var(--tw-text-opacity));
}

html :is(.text-blue-900) {
  --tw-text-opacity: 1;
  color: rgb(35 56 118 / var(--tw-text-opacity));
}

html :is(.text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

html :is(.text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

html :is(.text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

html :is(.text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

html :is(.text-gray-700) {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

html :is(.text-gray-800) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

html :is(.text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

html :is(.text-orange-500) {
  --tw-text-opacity: 1;
  color: rgb(255 90 31 / var(--tw-text-opacity));
}

html :is(.text-red-500) {
  --tw-text-opacity: 1;
  color: rgb(240 82 82 / var(--tw-text-opacity));
}

html :is(.text-red-600) {
  --tw-text-opacity: 1;
  color: rgb(224 36 36 / var(--tw-text-opacity));
}

html :is(.text-rose-600) {
  --tw-text-opacity: 1;
  color: rgb(225 29 72 / var(--tw-text-opacity));
}

html :is(.text-transparent) {
  color: transparent;
}

html :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

html :is(.decoration-2) {
  text-decoration-thickness: 2px;
}

html :is(.opacity-0) {
  opacity: 0;
}

html :is(.opacity-100) {
  opacity: 1;
}

html :is(.opacity-20) {
  opacity: 0.2;
}

html :is(.shadow) {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is(.shadow-lg) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is(.shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is(.shadow-sm) {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is(.shadow-xl) {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is(.shadow-gray-200) {
  --tw-shadow-color: #E5E7EB;
  --tw-shadow: var(--tw-shadow-colored);
}

html :is(.outline) {
  outline-style: solid;
}

html :is(.ring-2) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

html :is(.ring-white) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

html :is(.blur) {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

html :is(.blur-3xl) {
  --tw-blur: blur(64px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

html :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

html :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

html :is(.transition-\[opacity\2c margin\]) {
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

html :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

html :is(.transition-opacity) {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

html :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

html :is(.duration-300) {
  transition-duration: 300ms;
}

html :is(.duration-\[0\.1ms\]) {
  transition-duration: 0.1ms;
}

html :is(.ease-out) {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.\[--adaptive\:none\] {
  --adaptive: none;
}

.\[--strategy\:static\] {
  --strategy: static;
}

@media (min-width: 1024px) {
  .lg\:prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
  }

  .lg\:prose-xl :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  .lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1.0666667em;
  }

  .lg\:prose-xl :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }

  .lg\:prose-xl :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:prose-xl :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-xl :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:prose-xl :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    border-radius: 0.3125rem;
    padding-top: 0.25em;
    padding-inline-end: 0.4em;
    padding-bottom: 0.25em;
    padding-inline-start: 0.4em;
  }

  .lg\:prose-xl :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.8611111em;
  }

  .lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-inline-end: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-inline-start: 1.3333333em;
  }

  .lg\:prose-xl :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }

  .lg\:prose-xl :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-inline-start: 1.6em;
  }

  .lg\:prose-xl :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0.4em;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0.4em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0.6em;
    padding-inline-start: 1.6em;
  }

  .lg\:prose-xl :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }

  .lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
  }

  .lg\:prose-xl :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-end: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-inline-start: 0.6666667em;
  }

  .lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .lg\:prose-xl :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-top: 0.8888889em;
    padding-inline-end: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-inline-start: 0.6666667em;
  }

  .lg\:prose-xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .lg\:prose-xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    padding-inline-end: 0;
  }

  .lg\:prose-xl :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
    margin-bottom: 0;
  }
}

html :is(.before\:absolute)::before {
  content: var(--tw-content);
  position: absolute;
}

html :is(.before\:-top-5)::before {
  content: var(--tw-content);
  top: -1.25rem;
}

html :is(.before\:start-0)::before {
  content: var(--tw-content);
  inset-inline-start: 0px;
}

html :is(.before\:me-6)::before {
  content: var(--tw-content);
  margin-inline-end: 1.5rem;
}

html :is(.before\:h-5)::before {
  content: var(--tw-content);
  height: 1.25rem;
}

html :is(.before\:w-full)::before {
  content: var(--tw-content);
  width: 100%;
}

html :is(.before\:flex-\[1_1_0\%\])::before {
  content: var(--tw-content);
  flex: 1 1 0%;
}

html :is(.before\:border-t)::before {
  content: var(--tw-content);
  border-top-width: 1px;
}

html :is(.before\:border-gray-200)::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

html :is(.after\:ms-6)::after {
  content: var(--tw-content);
  margin-inline-start: 1.5rem;
}

html :is(.after\:flex-\[1_1_0\%\])::after {
  content: var(--tw-content);
  flex: 1 1 0%;
}

html :is(.after\:border-t)::after {
  content: var(--tw-content);
  border-top-width: 1px;
}

html :is(.after\:border-gray-200)::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

html :is(.hover\:border-gray-300:hover) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

html :is(.hover\:bg-blue-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(26 86 219 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-blue-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 66 159 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-gray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-gray-200:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-gray-300:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(209 213 219 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-gray-50:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-white:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

html :is(.hover\:bg-white\/10:hover) {
  background-color: rgb(255 255 255 / 0.1);
}

html :is(.hover\:text-black:hover) {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

html :is(.hover\:text-blue-600:hover) {
  --tw-text-opacity: 1;
  color: rgb(28 100 242 / var(--tw-text-opacity));
}

html :is(.hover\:text-blue-700:hover) {
  --tw-text-opacity: 1;
  color: rgb(26 86 219 / var(--tw-text-opacity));
}

html :is(.hover\:text-gray-400:hover) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

html :is(.hover\:text-gray-600:hover) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

html :is(.hover\:text-gray-800:hover) {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

html :is(.hover\:text-gray-900:hover) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

html :is(.hover\:underline:hover) {
  text-decoration-line: underline;
}

html :is(.focus\:border-blue-500:focus) {
  --tw-border-opacity: 1;
  border-color: rgb(63 131 248 / var(--tw-border-opacity));
}

html :is(.focus\:outline-none:focus) {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

html :is(.focus\:ring-2:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

html :is(.focus\:ring-4:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

html :is(.focus\:ring-blue-300:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(164 202 254 / var(--tw-ring-opacity));
}

html :is(.focus\:ring-blue-500:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(63 131 248 / var(--tw-ring-opacity));
}

html :is(.focus\:ring-blue-600:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(28 100 242 / var(--tw-ring-opacity));
}

html :is(.focus\:ring-gray-200:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(229 231 235 / var(--tw-ring-opacity));
}

html :is(.focus\:ring-gray-400:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(156 163 175 / var(--tw-ring-opacity));
}

html :is(.focus\:ring-offset-2:focus) {
  --tw-ring-offset-width: 2px;
}

html :is(.focus\:ring-offset-white:focus) {
  --tw-ring-offset-color: #ffffff;
}

html :is(.disabled\:pointer-events-none:disabled) {
  pointer-events: none;
}

html :is(.disabled\:opacity-50:disabled) {
  opacity: 0.5;
}

html :is(.group:hover .group-hover\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(28 100 242 / var(--tw-text-opacity));
}

html :is(.group:hover .group-hover\:text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

html :is(.hs-dropdown.open > .hs-dropdown-open\:opacity-100) {
  opacity: 1;
}

html :is(.hs-dropdown.open .hs-dropdown-toggle .hs-dropdown-open\:opacity-100) {
  opacity: 1;
}

html :is(.hs-dropdown.open > .hs-dropdown-menu > .hs-dropdown-open\:opacity-100) {
  opacity: 1;
}

html :is(.hs-tooltip.show .hs-tooltip-shown\:visible) {
  visibility: visible;
}

html :is(.hs-tooltip.show .hs-tooltip-shown\:opacity-100) {
  opacity: 1;
}

html :is(.hs-collapse.open .hs-collapse-open\:block) {
  display: block;
}

html :is(.hs-collapse.open .hs-collapse-open\:hidden) {
  display: none;
}

html :is(.hs-collapse.open.hs-collapse-open\:block) {
  display: block;
}

html :is(.hs-collapse.open.hs-collapse-open\:hidden) {
  display: none;
}

html :is(.hs-collapse-toggle.open .hs-collapse-open\:block) {
  display: block;
}

html :is(.hs-collapse-toggle.open .hs-collapse-open\:hidden) {
  display: none;
}

html :is(.hs-collapse-toggle.open.hs-collapse-open\:block) {
  display: block;
}

html :is(.hs-collapse-toggle.open.hs-collapse-open\:hidden) {
  display: none;
}

html :is([data-hs-tab].active.hs-tab-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

html :is([data-hs-tab].active.hs-tab-active\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(28 100 242 / var(--tw-text-opacity));
}

html :is([data-hs-tab].active.hs-tab-active\:shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is([data-hs-tab].active.hs-tab-active\:hover\:border-transparent:hover) {
  border-color: transparent;
}

html :is([data-hs-tab].active .hs-tab-active\:bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

html :is([data-hs-tab].active .hs-tab-active\:text-blue-600) {
  --tw-text-opacity: 1;
  color: rgb(28 100 242 / var(--tw-text-opacity));
}

html :is([data-hs-tab].active .hs-tab-active\:shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

html :is([data-hs-tab].active .hs-tab-active\:hover\:border-transparent:hover) {
  border-color: transparent;
}

html :is(:is(.dark .dark\:divide-gray-700) > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-divide-opacity));
}

html :is(.dark .dark\:border-blue-500) {
  --tw-border-opacity: 1;
  border-color: rgb(63 131 248 / var(--tw-border-opacity));
}

html :is(.dark .dark\:border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

html :is(.dark .dark\:border-gray-700) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
}

html :is(.dark .dark\:border-slate-700) {
  --tw-border-opacity: 1;
  border-color: rgb(51 65 85 / var(--tw-border-opacity));
}

html :is(.dark .dark\:border-transparent) {
  border-color: transparent;
}

html :is(.dark .dark\:bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-blue-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(28 100 242 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-gray-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-gray-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-gray-800\/50) {
  background-color: rgb(31 41 55 / 0.5);
}

html :is(.dark .dark\:bg-gray-900\/80) {
  background-color: rgb(17 24 39 / 0.8);
}

html :is(.dark .dark\:bg-purple-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(74 29 150 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-slate-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:bg-white\/\[\.075\]) {
  background-color: rgb(255 255 255 / .075);
}

html :is(.dark .dark\:bg-opacity-80) {
  --tw-bg-opacity: 0.8;
}

html :is(.dark .dark\:from-indigo-900\/70) {
  --tw-gradient-from: rgb(54 47 120 / 0.7) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(54 47 120 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.dark .dark\:from-slate-800) {
  --tw-gradient-from: #1e293b var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(30 41 59 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.dark .dark\:from-violet-900\/50) {
  --tw-gradient-from: rgb(76 29 149 / 0.5) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(76 29 149 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

html :is(.dark .dark\:via-indigo-900\/70) {
  --tw-gradient-to: rgb(54 47 120 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), rgb(54 47 120 / 0.7) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

html :is(.dark .dark\:via-slate-900\/0) {
  --tw-gradient-to: rgb(15 23 42 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), rgb(15 23 42 / 0) var(--tw-gradient-via-position), var(--tw-gradient-to);
}

html :is(.dark .dark\:to-blue-900\/70) {
  --tw-gradient-to: rgb(35 56 118 / 0.7) var(--tw-gradient-to-position);
}

html :is(.dark .dark\:to-purple-900) {
  --tw-gradient-to: #4A1D96 var(--tw-gradient-to-position);
}

html :is(.dark .dark\:to-slate-900\/0) {
  --tw-gradient-to: rgb(15 23 42 / 0) var(--tw-gradient-to-position);
}

html :is(.dark .dark\:text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(63 131 248 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-gray-700) {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-rose-500) {
  --tw-text-opacity: 1;
  color: rgb(244 63 94 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-slate-900) {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity));
}

html :is(.dark .dark\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

html :is(.dark .dark\:opacity-20) {
  opacity: 0.2;
}

html :is(.dark .dark\:shadow-gray-900\/\[\.2\]) {
  --tw-shadow-color: rgb(17 24 39 / .2);
  --tw-shadow: var(--tw-shadow-colored);
}

html :is(.dark .dark\:shadow-slate-700\/\[\.7\]) {
  --tw-shadow-color: rgb(51 65 85 / .7);
  --tw-shadow: var(--tw-shadow-colored);
}

html :is(.dark .dark\:ring-gray-800) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(31 41 55 / var(--tw-ring-opacity));
}

html :is(.dark .dark\:before\:border-gray-600)::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

html :is(.dark .dark\:after\:border-gray-600)::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

html :is(.dark .dark\:checked\:border-blue-500:checked) {
  --tw-border-opacity: 1;
  border-color: rgb(63 131 248 / var(--tw-border-opacity));
}

html :is(.dark .dark\:checked\:bg-blue-500:checked) {
  --tw-bg-opacity: 1;
  background-color: rgb(63 131 248 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:hover\:bg-blue-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(26 86 219 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:hover\:bg-gray-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:hover\:bg-gray-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:hover\:bg-gray-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

html :is(.dark .dark\:hover\:text-blue-400:hover) {
  --tw-text-opacity: 1;
  color: rgb(118 169 250 / var(--tw-text-opacity));
}

html :is(.dark .dark\:hover\:text-blue-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(63 131 248 / var(--tw-text-opacity));
}

html :is(.dark .dark\:hover\:text-gray-200:hover) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

html :is(.dark .dark\:hover\:text-gray-300:hover) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

html :is(.dark .dark\:hover\:text-white:hover) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

html :is(.dark .dark\:focus\:outline-none:focus) {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

html :is(.dark .dark\:focus\:ring-1:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

html :is(.dark .dark\:focus\:ring-gray-600:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(75 85 99 / var(--tw-ring-opacity));
}

html :is(.dark .dark\:focus\:ring-offset-gray-800:focus) {
  --tw-ring-offset-color: #1F2937;
}

html :is(.dark .group:hover .dark\:group-hover\:text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(63 131 248 / var(--tw-text-opacity));
}

html :is(.dark .group:hover .dark\:group-hover\:text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

html :is(.dark [data-hs-tab].active.dark\:hs-tab-active\:bg-slate-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

html :is(.dark [data-hs-tab].active.dark\:hs-tab-active\:text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(63 131 248 / var(--tw-text-opacity));
}

html :is(.dark [data-hs-tab].active.dark\:hs-tab-active\:text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

html :is(.dark [data-hs-tab].active .dark\:hs-tab-active\:bg-slate-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

html :is(.dark [data-hs-tab].active .dark\:hs-tab-active\:text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(63 131 248 / var(--tw-text-opacity));
}

html :is(.dark [data-hs-tab].active .dark\:hs-tab-active\:text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

@media (max-width: 639px) {
  html :is(.max-\[639px\]\:text-4xl) {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
}

@media (max-width: 430px) {
  html :is(.max-\[430px\]\:text-3xl) {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

@media (max-width: 322px) {
  html :is(.max-\[322px\]\:text-2xl) {
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@media (min-width: 640px) {
  html :is(.sm\:my-6) {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }

  html :is(.sm\:mb-8) {
    margin-bottom: 2rem;
  }

  html :is(.sm\:mt-0) {
    margin-top: 0px;
  }

  html :is(.sm\:mt-10) {
    margin-top: 2.5rem;
  }

  html :is(.sm\:block) {
    display: block;
  }

  html :is(.sm\:flex) {
    display: flex;
  }

  html :is(.sm\:inline-flex) {
    display: inline-flex;
  }

  html :is(.sm\:hidden) {
    display: none;
  }

  html :is(.sm\:h-24) {
    height: 6rem;
  }

  html :is(.sm\:h-3\/4) {
    height: 75%;
  }

  html :is(.sm\:h-96) {
    height: 24rem;
  }

  html :is(.sm\:w-24) {
    width: 6rem;
  }

  html :is(.sm\:w-28) {
    width: 7rem;
  }

  html :is(.sm\:w-48) {
    width: 12rem;
  }

  html :is(.sm\:w-\[auto\]) {
    width: auto;
  }

  html :is(.sm\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  html :is(.sm\:flex-row) {
    flex-direction: row;
  }

  html :is(.sm\:flex-nowrap) {
    flex-wrap: nowrap;
  }

  html :is(.sm\:items-center) {
    align-items: center;
  }

  html :is(.sm\:justify-start) {
    justify-content: flex-start;
  }

  html :is(.sm\:justify-end) {
    justify-content: flex-end;
  }

  html :is(.sm\:justify-between) {
    justify-content: space-between;
  }

  html :is(.sm\:gap-x-7) {
    -moz-column-gap: 1.75rem;
         column-gap: 1.75rem;
  }

  html :is(.sm\:gap-y-0) {
    row-gap: 0px;
  }

  html :is(.sm\:border) {
    border-width: 1px;
  }

  html :is(.sm\:border-b-2) {
    border-bottom-width: 2px;
  }

  html :is(.sm\:border-s) {
    border-inline-start-width: 1px;
  }

  html :is(.sm\:border-gray-300) {
    --tw-border-opacity: 1;
    border-color: rgb(209 213 219 / var(--tw-border-opacity));
  }

  html :is(.sm\:border-transparent) {
    border-color: transparent;
  }

  html :is(.sm\:p-6) {
    padding: 1.5rem;
  }

  html :is(.sm\:p-7) {
    padding: 1.75rem;
  }

  html :is(.sm\:px-4) {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  html :is(.sm\:px-6) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  html :is(.sm\:px-7) {
    padding-left: 1.75rem;
    padding-right: 1.75rem;
  }

  html :is(.sm\:py-0) {
    padding-top: 0px;
    padding-bottom: 0px;
  }

  html :is(.sm\:py-2) {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }

  html :is(.sm\:py-4) {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  html :is(.sm\:py-6) {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }

  html :is(.sm\:ps-4) {
    padding-inline-start: 1rem;
  }

  html :is(.sm\:ps-7) {
    padding-inline-start: 1.75rem;
  }

  html :is(.sm\:text-2xl) {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  html :is(.sm\:text-3xl) {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  html :is(.sm\:text-4xl) {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  html :is(.sm\:text-5xl) {
    font-size: 3rem;
    line-height: 1;
  }

  html :is(.sm\:text-lg) {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  html :is(.sm\:text-sm) {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }

  html :is(.sm\:shadow-md) {
    --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  html :is(.sm\:duration-\[150ms\]) {
    transition-duration: 150ms;
  }

  .sm\:\[--strategy\:fixed\] {
    --strategy: fixed;
  }

  .sm\:\[--trigger\:hover\] {
    --trigger: hover;
  }

  html :is(.dark .sm\:dark\:border) {
    border-width: 1px;
  }
}

@media (min-width: 648px) {
  html :is(.min-\[648px\]\:gap-x-2) {
    -moz-column-gap: 0.5rem;
         column-gap: 0.5rem;
  }
}

@media (min-width: 768px) {
  html :is(.md\:mt-10) {
    margin-top: 2.5rem;
  }

  html :is(.md\:block) {
    display: block;
  }

  html :is(.md\:size-7) {
    width: 1.75rem;
    height: 1.75rem;
  }

  html :is(.md\:w-32) {
    width: 8rem;
  }

  html :is(.md\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  html :is(.md\:items-center) {
    align-items: center;
  }

  html :is(.md\:gap-8) {
    gap: 2rem;
  }

  html :is(.md\:gap-x-4) {
    -moz-column-gap: 1rem;
         column-gap: 1rem;
  }

  html :is(.md\:p-10) {
    padding: 2.5rem;
  }

  html :is(.md\:p-16) {
    padding: 4rem;
  }

  html :is(.md\:p-5) {
    padding: 1.25rem;
  }

  html :is(.md\:p-6) {
    padding: 1.5rem;
  }

  html :is(.md\:ps-5) {
    padding-inline-start: 1.25rem;
  }

  html :is(.md\:text-3xl) {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }

  html :is(.md\:text-lg) {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  html :is(.md\:text-xl) {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  html :is(.md\:leading-normal) {
    line-height: 1.5;
  }
}

@media (min-width: 1024px) {
  html :is(.lg\:order-2) {
    order: 2;
  }

  html :is(.lg\:col-span-1) {
    grid-column: span 1 / span 1;
  }

  html :is(.lg\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  html :is(.lg\:col-span-4) {
    grid-column: span 4 / span 4;
  }

  html :is(.lg\:col-span-6) {
    grid-column: span 6 / span 6;
  }

  html :is(.lg\:col-span-7) {
    grid-column: span 7 / span 7;
  }

  html :is(.lg\:col-start-6) {
    grid-column-start: 6;
  }

  html :is(.lg\:col-start-8) {
    grid-column-start: 8;
  }

  html :is(.lg\:mx-auto) {
    margin-left: auto;
    margin-right: auto;
  }

  html :is(.lg\:-mb-6) {
    margin-bottom: -1.5rem;
  }

  html :is(.lg\:-ms-6) {
    margin-inline-start: -1.5rem;
  }

  html :is(.lg\:mb-0) {
    margin-bottom: 0px;
  }

  html :is(.lg\:me-6) {
    margin-inline-end: 1.5rem;
  }

  html :is(.lg\:ms-0) {
    margin-inline-start: 0px;
  }

  html :is(.lg\:mt-10) {
    margin-top: 2.5rem;
  }

  html :is(.lg\:mt-6) {
    margin-top: 1.5rem;
  }

  html :is(.lg\:block) {
    display: block;
  }

  html :is(.lg\:flex) {
    display: flex;
  }

  html :is(.lg\:grid) {
    display: grid;
  }

  html :is(.lg\:hidden) {
    display: none;
  }

  html :is(.lg\:h-full) {
    height: 100%;
  }

  html :is(.lg\:w-3\/5) {
    width: 60%;
  }

  html :is(.lg\:w-36) {
    width: 9rem;
  }

  html :is(.lg\:w-full) {
    width: 100%;
  }

  html :is(.lg\:translate-x-20) {
    --tw-translate-x: 5rem;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  html :is(.lg\:grid-cols-1) {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  html :is(.lg\:grid-cols-12) {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  html :is(.lg\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  html :is(.lg\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  html :is(.lg\:grid-cols-6) {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  html :is(.lg\:items-center) {
    align-items: center;
  }

  html :is(.lg\:justify-between) {
    justify-content: space-between;
  }

  html :is(.lg\:gap-16) {
    gap: 4rem;
  }

  html :is(.lg\:gap-6) {
    gap: 1.5rem;
  }

  html :is(.lg\:gap-8) {
    gap: 2rem;
  }

  html :is(.lg\:gap-x-6) {
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem;
  }

  html :is(.lg\:gap-y-0) {
    row-gap: 0px;
  }

  html :is(.lg\:space-y-8 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(2rem * var(--tw-space-y-reverse));
  }

  html :is(.lg\:bg-gradient-to-r) {
    background-image: linear-gradient(to right, var(--tw-gradient-stops));
  }

  html :is(.lg\:from-gray-50) {
    --tw-gradient-from: #F9FAFB var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  html :is(.lg\:via-transparent) {
    --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), transparent var(--tw-gradient-via-position), var(--tw-gradient-to);
  }

  html :is(.lg\:to-transparent) {
    --tw-gradient-to: transparent var(--tw-gradient-to-position);
  }

  html :is(.lg\:p-10) {
    padding: 2.5rem;
  }

  html :is(.lg\:px-8) {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  html :is(.lg\:py-14) {
    padding-top: 3.5rem;
    padding-bottom: 3.5rem;
  }

  html :is(.lg\:py-16) {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }

  html :is(.lg\:pe-8) {
    padding-inline-end: 2rem;
  }

  html :is(.lg\:ps-8) {
    padding-inline-start: 2rem;
  }

  html :is(.lg\:text-2xl) {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  html :is(.lg\:text-5xl) {
    font-size: 3rem;
    line-height: 1;
  }

  html :is(.lg\:text-6xl) {
    font-size: 3.75rem;
    line-height: 1;
  }

  html :is(.lg\:leading-normal) {
    line-height: 1.5;
  }

  html :is(.lg\:leading-tight) {
    line-height: 1.25;
  }
}

@media (min-width: 1280px) {
  html :is(.xl\:gap-20) {
    gap: 5rem;
  }

  html :is(.xl\:text-2xl) {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  html :is(.xl\:leading-normal) {
    line-height: 1.5;
  }
}

html :is(.rtl\:rotate-180:where([dir="rtl"], [dir="rtl"] *)) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

html :is(.rtl\:space-x-reverse:where([dir="rtl"], [dir="rtl"] *) > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 1;
}