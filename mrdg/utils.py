def determine_zodiac_hour_str(hour_str, minute_str):
    # 입력된 시간과 분을 정수형으로 변환
    try:
        hour = int(hour_str)
        minute = int(minute_str)
    except ValueError:
        return "잘못된 시간 형식입니다."

    # 시간과 분을 하나의 숫자로 결합하여 표현
    total_minutes = hour * 60 + minute

    # 12지지에 따른 시간 범위 설정
    time_ranges = [
        ((23*60 + 31, 24*60), "자"),  # 23:31 ~ 24:00 (자정까지)
        ((0, 1*60 + 30), "자"),       # 00:00 ~ 01:30
        ((1*60 + 31, 3*60 + 30), "축"),   # 01:31 ~ 03:30
        ((3*60 + 31, 5*60 + 30), "인"),   # 03:31 ~ 05:30
        ((5*60 + 31, 7*60 + 30), "묘"),   # 05:31 ~ 07:30
        ((7*60 + 31, 9*60 + 30), "진"),   # 07:31 ~ 09:30
        ((9*60 + 31, 11*60 + 30), "사"),  # 09:31 ~ 11:30
        ((11*60 + 31, 13*60 + 30), "오"), # 11:31 ~ 13:30
        ((13*60 + 31, 15*60 + 30), "미"), # 13:31 ~ 15:30
        ((15*60 + 31, 17*60 + 30), "신"), # 15:31 ~ 17:30
        ((17*60 + 31, 19*60 + 30), "유"), # 17:31 ~ 19:30
        ((19*60 + 31, 21*60 + 30), "술"), # 19:31 ~ 21:30
        ((21*60 + 31, 23*60 + 30), "해")  # 21:31 ~ 23:30
    ]

    # 입력된 시간이 해당하는 지지를 찾음
    for (start, end), zodiac in time_ranges:
        if start <= total_minutes <= end:
            return zodiac

    # 지정된 시간 범위 밖인 경우
    return "해당 시간에 대한 지지를 찾을 수 없음"